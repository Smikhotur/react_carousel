{"version":3,"sources":["components/Carousel.js","components/Form/Form.jsx","App.js","index.js"],"names":["Carousel","images","itemWidth","frameSize","animationDuration","translateX","nextButton","prevButton","className","style","width","map","img","i","key","transition","transform","src","alt","type","onClick","Form","state","step","infinite","handleChange","event","target","name","value","checked","setState","callbeckParams","e","param","preventDefault","counter","this","props","htmlFor","id","onChange","React","Component","App","paramFromInputs","nextSlide","length","prevState","prevSlide","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ec76d97d.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Carousel.scss';\n\nconst Carousel = ({\n  images,\n  itemWidth,\n  frameSize,\n  animationDuration,\n  translateX,\n  nextButton,\n  prevButton,\n}) => (\n  <div\n    className=\"carousel\"\n    style={{\n      width: `${itemWidth} * ${frameSize}px`,\n    }}\n  >\n    <ul\n      className=\"carousel__list\"\n    >\n      {images.map((img, i) => (\n        <li\n          key={img}\n          className=\"carousel__item\"\n          style={{\n            transition: `transform ${animationDuration}ms ease`,\n            transform: `translateX(${translateX}px)`,\n          }}\n        >\n          <img\n            src={img}\n            alt={i}\n            style={{\n              width: `${itemWidth}px`,\n            }}\n          />\n        </li>\n      ))}\n    </ul>\n    <section\n      className=\"carousel__inner\"\n    >\n      <button\n        type=\"button\"\n        className=\"carousel__btn\"\n        onClick={prevButton}\n      >\n        Prev\n      </button>\n      <button\n        type=\"button\"\n        className=\"carousel__btn\"\n        onClick={nextButton}\n      >\n        Next\n      </button>\n    </section>\n  </div>\n);\n\nCarousel.propTypes = {\n  images: PropTypes.arrayOf(PropTypes.string).isRequired,\n  frameSize: PropTypes.number.isRequired,\n  itemWidth: PropTypes.number.isRequired,\n  animationDuration: PropTypes.number.isRequired,\n  translateX: PropTypes.number.isRequired,\n  prevButton: PropTypes.func.isRequired,\n  nextButton: PropTypes.func.isRequired,\n};\n\nexport default Carousel;\n","import React from 'react';\nimport './Form.scss';\nimport PropTypes from 'prop-types';\n\nexport default class Form extends React.Component {\n  state = {\n    step: 3,\n    frameSize: 3,\n    itemWidth: 130,\n    animationDuration: 1000,\n    infinite: false,\n  }\n\n  handleChange = (event) => {\n    const {\n      name,\n      value,\n      checked,\n    } = event.target;\n\n    this.setState({\n      [name]: value,\n      infinite: checked,\n    });\n  }\n\n  callbeckParams = (e, param) => {\n    e.preventDefault();\n    const counter = this.state.frameSize;\n\n    param(\n      +this.state.frameSize,\n      +this.state.itemWidth,\n      +this.state.animationDuration,\n      +this.state.step,\n      this.state.infinite,\n      +counter,\n    );\n  }\n\n  render() {\n    const {\n      frameSize,\n      itemWidth,\n      animationDuration,\n      step,\n    } = this.state;\n    const { handleChange, callbeckParams } = this;\n    const { param } = this.props;\n\n    return (\n      <form\n        className=\"form-block\"\n      >\n        <h2 className=\"form-block__title\">Customize</h2>\n        <label className=\"form-block__label\" htmlFor=\"size\">\n          Frame size\n          <input\n            className=\"form-block__input\"\n            id=\"size\"\n            name=\"frameSize\"\n            value={frameSize}\n            type=\"number\"\n            onChange={handleChange}\n          />\n        </label>\n        <label className=\"form-block__label\" htmlFor=\"width\">\n          Item width\n          <input\n            className=\"form-block__input\"\n            id=\"width\"\n            name=\"itemWidth\"\n            value={itemWidth}\n            type=\"number\"\n            onChange={handleChange}\n          />\n        </label>\n        <label className=\"form-block__label\" htmlFor=\"step\">\n          Step\n          <input\n            className=\"form-block__input\"\n            id=\"step\"\n            name=\"step\"\n            type=\"number\"\n            value={step}\n            onChange={handleChange}\n          />\n        </label>\n        <label className=\"form-block__label\" htmlFor=\"duration\">\n          Animation duration\n          <input\n            className=\"form-block__input\"\n            id=\"duration\"\n            name=\"animationDuration\"\n            value={animationDuration}\n            type=\"number\"\n            onChange={handleChange}\n          />\n        </label>\n        <label className=\"form-block__infinite\" htmlFor=\"infinite\">\n          <span>Infinite</span>\n          <input\n            id=\"infinite\"\n            type=\"checkbox\"\n            onChange={handleChange}\n          />\n        </label>\n\n        <button\n          className=\"form-block__btn\"\n          type=\"submit\"\n          onClick={(e) => {\n            callbeckParams(e, param);\n          }}\n        >\n          change data\n        </button>\n      </form>\n    );\n  }\n}\n\nForm.propTypes = {\n  param: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport './App.scss';\n\nimport Carousel from './components/Carousel';\nimport Form from './components/Form/Form';\n\nclass App extends React.Component {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    step: 3,\n    frameSize: 3,\n    itemWidth: 130,\n    animationDuration: 1000,\n    infinite: false,\n    counter: 3,\n    translateX: 0,\n  };\n\n  paramFromInputs\n  = (frameSize, itemWidth, animationDuration, step, infinite, counter) => {\n    this.setState(() => ({\n      frameSize,\n      itemWidth,\n      animationDuration,\n      step,\n      infinite,\n      counter,\n      translateX: 0,\n    }));\n  }\n\n  nextSlide = () => {\n    const { images, counter, itemWidth, step, infinite } = this.state;\n\n    if (images.length === counter && infinite) {\n      this.setState(prevState => ({\n        translateX: 0,\n        counter: prevState.frameSize,\n      }));\n    } else if (images.length - counter < step) {\n      this.setState(prevState => ({\n        translateX: prevState.translateX\n          - (images.length - counter) * itemWidth,\n        counter: prevState.counter + (images.length - counter),\n      }));\n    } else {\n      this.setState(prevState => ({\n        translateX: prevState.translateX - prevState.itemWidth * prevState.step,\n        counter: prevState.counter + prevState.step,\n      }));\n    }\n  }\n\n  prevSlide = () => {\n    const { counter, itemWidth, step, frameSize, infinite } = this.state;\n\n    if (counter === frameSize && infinite) {\n      this.setState(prevState => ({\n        translateX: -(prevState.itemWidth * 10) + (itemWidth * frameSize),\n        counter: prevState.images.length,\n      }));\n    } else if (this.state.counter - frameSize < frameSize) {\n      this.setState(prevState => ({\n        translateX: prevState.translateX + (counter - frameSize) * itemWidth,\n        counter: prevState.frameSize,\n      }));\n    } else {\n      this.setState(prevState => ({\n        translateX: prevState.translateX + itemWidth * step,\n        counter: prevState.counter - prevState.step,\n      }));\n    }\n  }\n\n  render() {\n    const {\n      images,\n      frameSize,\n      itemWidth,\n      animationDuration,\n      translateX,\n    } = this.state;\n    const {\n      paramFromInputs,\n      nextSlide,\n      prevSlide,\n    } = this;\n\n    return (\n      <div className=\"app\">\n        {/* eslint-disable-next-line */}\n        <h1 className=\"app__title\">Carousel with {images.length} images</h1>\n\n        <Form param={paramFromInputs} />\n\n        <Carousel\n          images={images}\n          frameSize={frameSize}\n          itemWidth={itemWidth}\n          animationDuration={animationDuration}\n          translateX={translateX}\n          nextButton={nextSlide}\n          prevButton={prevSlide}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}